arrange(datepubli,serie,scenario,annee)
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (tablong %>%
filter(scenario!="obs")  %>%
select(scenario,serie,datepubli) %>%
distinct() %>%
group_by(serie,datepubli) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4) %>%
select(-nbsc))
# duplication des projections en "tous scénarios"
scenariosproj <- tablong %>% filter(!(scenario %in% c("obs","tous scénarios"))) %>%
select(datepubli,scenario) %>% distinct() %>%
rename(datepublisc=datepubli)
tablong <- bind_rows(
tablong %>% filter(scenario=="obs"),
tablong %>% filter(scenario!="obs") %>%
anti_join(nbseriesscunique, by=c("datepubli","serie")),
tablong %>% filter(scenario!="obs") %>%
inner_join(nbseriesscunique, by=c("datepubli","serie")) %>%
group_by(serie,datepubli,annee) %>%
slice(rep(1:n(),each=4) ) %>%
mutate(scenario = (scenariosproj %>% filter(datepublisc==min(datepubli)))$scenario ) %>%
ungroup()
)
# création de la table complète
#for (i in c(1:length(tabindics))) {
#  if (i==1) {projcor  <- tabindics[[i]]}
#  else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee","datepubli"))}
#  else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario) %>% distinct(),by=c("annee","datepubli"))}
#}
projcor <- tablong %>%
pivot_wider(id_cols=c("datepubli","scenario","annee"),
names_from="serie",values_from="val") %>%
mutate(txprelevconvepr = if_else(
is.na(txprelevconvepr) & (scenario=="obs"),txprelev,txprelevconvepr),
txprelevconveec = if_else(
is.na(txprelevconveec) & (scenario=="obs"),txprelev,txprelevconveec),
partressourcespibconvepr = if_else(
is.na(partressourcespibconvepr) & (scenario=="obs"),partressourcespib,partressourcespibconvepr),
partressourcespibconveec = if_else(
is.na(partressourcespibconveec) & (scenario=="obs"),partressourcespib,partressourcespibconveec) )
unique(tablong$serie)
truc <- extrait_opendata(intitulecourt='txprelevconveec',datepubli="2022-09-15")
load_all()
truc <- extrait_opendata(intitulecourt='txprelevconveec',datepubli="2022-09-15")
intitulecourt='txprelevconveec'
datepubli="2022-09-15"
intitule = NULL
champ_sexe = NA
champ_geo = NA
champ_autre = NA
intitulecourtloc <- intitulecourt
if (!is.null(intitule)) {
intituleloc <- recode(enc2utf8(intitule),
"taux de retraités" = "taux de retraités par âge",
"txretr" = "taux de retraités par âge",
"taux de nouveaux retraités" = "taux de nouveaux retraités par âge",
"tauxnouvretr" = "taux de nouveaux retraités par âge")
if (!(intituleloc %in% sources_opendata$intitule)) {warning(paste0("Intitulé '",intituleloc,"' non retrouvé"))}
}
datepubliloc <- datepubli
champ_sexeloc <- champ_sexe
champ_geoloc <- champ_geo
champ_autreloc <- champ_autre
if (!is.null(intitulecourt)) { donnees <- sources_opendata %>% filter(intitulecourt==intitulecourtloc)}
else { donnees <- sources_opendata %>% filter(intitule==intituleloc) }
if (!is.na(datepubliloc)) {donnees <- donnees %>% filter(datepubli==datepubliloc)}
if (!is.na(champ_sexeloc)) {donnees <- donnees %>% filter(champ_sexe==champ_sexeloc)}
if (!is.na(champ_geoloc)) {donnees <- donnees %>% filter(champ_geo==champ_geoloc)}
if (!is.na(champ_autreloc)) {donnees <- donnees %>% filter(champ_autre==champ_autreloc)}
if (!is.na(datepubliloc)) {donnees <- donnees %>% filter(datepubli==datepubliloc)}
(nrow(donnees)>1)
if (!(length(donnees$zone)==1L)) {warning(paste("Problème rencontré pour la série ",donnees$intitulecourt))}
rangecells <- cellranger::as.cell_limits(donnees$zone)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
View(vals)
names(vals)[1] <- "x1"
View(vals)
View(vals)
(!(is.na(donnees$complzone)))
names(vals)[2] <- "x2"
vals <- vals %>%
mutate(x1= if_else(is.na(x1) | x1=="",x2,x1),
x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup") %>%
filter(x1==donnees$complzone) %>%
select(-x1) %>%
rename(x1=x2)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
names(vals)[1] <- "x1"
names(vals)[2] <- "x2"
vals_ <- vals %>%
mutate(x1= if_else(is.na(x1) | x1=="",x2,x1),
x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
View(vals_)
View(vals_)
vals <- vals %>% mutate(x1= if_else(is.na(x1) | x1=="",x2,x1))
vals <- vals %>%
mutate(x1= if_else(is.na(x1) | x1=="",x2,x1),
x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup") %>%
filter(x1==donnees$complzone) %>%
select(-x1) %>%
rename(x1=x2)
View(vals)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
names(vals)[1] <- "x1"
donnees$complzone
vals <- vals %>% mutate(x1= if_else(is.na(x1) | x1=="",x2,x1))
View(vals)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
names(vals)[1] <- "x1"
names(vals)[2] <- "x2"
vals <- vals %>% mutate(x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(x2)),x2,x1))
vals <- vals %>%
mutate(x1= if_else(is.na(x1) | x1=="",x2,x1),
x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup") %>%
filter(x1==donnees$complzone) %>%
select(-x1) %>%
rename(x1=x2)
View(vals)
load_all()
# extraction de tous les noms des séries de données tirées du rapport du COR
indiccor <- sources_opendata %>%
filter(producteur=="COR",reference=="rapport annuel") %>%
select(intitulecourt,datepubli)
# extraction de toutes les séries
tabindics <- map2(indiccor$intitulecourt,indiccor$datepubli,
function(x,y){
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"observations" = "obs",
"projetée" = "tous scénarios",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"1.6e-2"="+1,6%/an",
"7.0000000000000001e-3"="+0,7%/an",
"0.016"="+1,6%/an",
"0.013"="+1,3%/an",
"0.007"="+0,7%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
#names(tabindics) <- indiccor
# unique( (do.call("bind_rows",tabindics))$scenario )
# table mise en forme longue
tablong <- do.call("bind_rows",tabindics) %>%
# correction à la main ...
mutate(scenario = if_else(is.na(scenario) & !is.na(x2),x2,scenario) %>%
recode("Obs" = "obs")) %>%
select(-x2) %>%
# mise en forme longue
pivot_longer(cols=-c("scenario","annee","datepubli"),names_to="serie",values_to="val") %>%
filter(!is.na(val))
# part des salaires dans la VA : on duplique jusqu'à l'horizon de projection la dernière valeur indiquée (supposée constante en projection)
tablong <- bind_rows(
tablong %>% filter(serie!="partsalva" | scenario=="obs"),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>% filter(annee<max(annee)) %>% ungroup(),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>%
filter(annee==max(annee)) %>%
slice(rep(1:n(),each=2070-annee+1)) %>%
mutate(annee=c(min(annee):2070)) %>%
ungroup()
) %>%
arrange(datepubli,serie,scenario,annee)
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (tablong %>%
filter(scenario!="obs")  %>%
select(scenario,serie,datepubli) %>%
distinct() %>%
group_by(serie,datepubli) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4) %>%
select(-nbsc))
# duplication des projections en "tous scénarios" pour chacun des scénarios de projection
scenariosproj <- tablong %>% filter(!(scenario %in% c("obs","tous scénarios"))) %>%
select(datepubli,scenario) %>% distinct() %>%
rename(datepublisc=datepubli)
tablong <- bind_rows(
tablong %>% filter(scenario=="obs"),
tablong %>% filter(scenario!="obs") %>%
anti_join(nbseriesscunique, by=c("datepubli","serie")),
tablong %>% filter(scenario!="obs") %>%
inner_join(nbseriesscunique, by=c("datepubli","serie")) %>%
group_by(serie,datepubli,annee) %>%
slice(rep(1:n(),each=4) ) %>%
mutate(scenario = (scenariosproj %>% filter(datepublisc==min(datepubli)))$scenario ) %>%
ungroup()
)
# création de la table complète
#for (i in c(1:length(tabindics))) {
#  if (i==1) {projcor  <- tabindics[[i]]}
#  else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee","datepubli"))}
#  else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario) %>% distinct(),by=c("annee","datepubli"))}
#}
projcor <- tablong %>%
pivot_wider(id_cols=c("datepubli","scenario","annee"),
names_from="serie",values_from="val") %>%
mutate(txprelevconvepr = if_else(
is.na(txprelevconvepr) & (scenario=="obs"),txprelev,txprelevconvepr),
txprelevconveec = if_else(
is.na(txprelevconveec) & (scenario=="obs"),txprelev,txprelevconveec),
partressourcespibconvepr = if_else(
is.na(partressourcespibconvepr) & (scenario=="obs"),partressourcespib,partressourcespibconvepr),
partressourcespibconveec = if_else(
is.na(partressourcespibconveec) & (scenario=="obs"),partressourcespib,partressourcespibconveec) )
truc <- extrait_opendata(intitulecourt='txprelevconveec',datepubli="2022-09-15")
View(truc)
View(truc)
tablong <- do.call("bind_rows",tabindics) %>%
# correction à la main ...
mutate(scenario = if_else(is.na(scenario) & !is.na(x2),x2,scenario) %>%
recode("Obs" = "obs")) %>%
select(-x2) %>%
# mise en forme longue
pivot_longer(cols=-c("scenario","annee","datepubli"),names_to="serie",values_to="val") %>%
filter(!is.na(val))
truc <- tablong %>% filter(serie=="txprelevconveec")
unique(tablong$serie)
indiccor <- sources_opendata %>%
filter(producteur=="COR",reference=="rapport annuel") %>%
select(intitulecourt,datepubli)
View(indiccor)
tablong <- do.call("bind_rows",tabindics) %>%
# correction à la main ...
mutate(scenario = if_else(is.na(scenario) & !is.na(x2),x2,scenario) %>%
recode("Obs" = "obs")) %>%
select(-x2) %>%
# mise en forme longue
pivot_longer(cols=-c("scenario","annee","datepubli"),names_to="serie",values_to="val")
truc <- tablong %>% filter(serie=="txprelevconveec")
View(truc)
x<-"txprelevconveec"
y
y<-"2022-09-15"
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1)
View(tab)
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"observations" = "obs",
"projetée" = "tous scénarios",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"1.6e-2"="+1,6%/an",
"7.0000000000000001e-3"="+0,7%/an",
"0.016"="+1,6%/an",
"0.013"="+1,3%/an",
"0.007"="+0,7%/an",
"0.01"="+1%/an"
))
View(tab)
names(tab) <- recode(names(tab),"valeurs"=x)
View(tab)
tabindics <- map2(indiccor$intitulecourt,indiccor$datepubli,
function(x,y){
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"observations" = "obs",
"projetée" = "tous scénarios",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"1.6e-2"="+1,6%/an",
"7.0000000000000001e-3"="+0,7%/an",
"0.016"="+1,6%/an",
"0.013"="+1,3%/an",
"0.007"="+0,7%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
x<-"txprelev"
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1)
x<-"partressourcespib"
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1)
View(tab)
x<-"partressourcespibconveec"
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1)
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo)
intitulecourt=x
datepubli=y
intitulecourtloc <- intitulecourt
if (!is.null(intitule)) {
intituleloc <- recode(enc2utf8(intitule),
"taux de retraités" = "taux de retraités par âge",
"txretr" = "taux de retraités par âge",
"taux de nouveaux retraités" = "taux de nouveaux retraités par âge",
"tauxnouvretr" = "taux de nouveaux retraités par âge")
if (!(intituleloc %in% sources_opendata$intitule)) {warning(paste0("Intitulé '",intituleloc,"' non retrouvé"))}
}
datepubliloc <- datepubli
champ_sexeloc <- champ_sexe
champ_geoloc <- champ_geo
champ_autreloc <- champ_autre
if (!is.null(intitulecourt)) { donnees <- sources_opendata %>% filter(intitulecourt==intitulecourtloc)
} else { donnees <- sources_opendata %>% filter(intitule==intituleloc) }
if (!is.na(datepubliloc)) {donnees <- donnees %>% filter(datepubli==datepubliloc)}
if (!is.na(champ_sexeloc)) {donnees <- donnees %>% filter(champ_sexe==champ_sexeloc)}
if (!is.na(champ_geoloc)) {donnees <- donnees %>% filter(champ_geo==champ_geoloc)}
if (!is.na(champ_autreloc)) {donnees <- donnees %>% filter(champ_autre==champ_autreloc)}
(nrow(donnees)>1)
intitulecourt
if (!(length(donnees$zone)==1L)) {warning(paste("Problème rencontré pour la série ",donnees$intitulecourt))}
rangecells <- cellranger::as.cell_limits(donnees$zone)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
View(vals)
names(vals)[1] <- "x1"
(!(is.na(donnees$complzone)))
names(vals)[2] <- "x2"
View(vals)
vals <- vals %>% mutate(x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(x2)),x2,x1))
View(vals)
tolower(NA)
grepl("obs",tolower(NA))
vals <- vals %>% mutate(x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(x2)),x2,x1))
vals <- vals %>% mutate(x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(as.character(x2))),x2,x1))
vals <- vals %>% mutate(x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(as.character(x2))),as.character(x2),x1))
vals <- vals %>% mutate(x1=as.character(x1))
vals <- vals %>%
mutate(x2 = as.character(x2),
x1= if_else((is.na(x1) | x1=="") & grepl("obs",tolower(x2)),x2,x1))
vals <- vals %>%
mutate(x1= if_else(is.na(x1) | x1=="",x2,x1),
x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup") %>%
filter(x1==donnees$complzone) %>%
select(-x1) %>%
rename(x1=x2)
View(vals)
load_all()
# extraction de tous les noms des séries de données tirées du rapport du COR
indiccor <- sources_opendata %>%
filter(producteur=="COR",reference=="rapport annuel") %>%
select(intitulecourt,datepubli)
# extraction de toutes les séries
tabindics <- map2(indiccor$intitulecourt,indiccor$datepubli,
function(x,y){
tab <- extrait_opendata(intitulecourt=x,datepubli=y) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"observations" = "obs",
"projetée" = "tous scénarios",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"1.6e-2"="+1,6%/an",
"7.0000000000000001e-3"="+0,7%/an",
"0.016"="+1,6%/an",
"0.013"="+1,3%/an",
"0.007"="+0,7%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
tablong <- do.call("bind_rows",tabindics) %>%
# correction à la main ...
mutate(scenario = if_else(is.na(scenario) & !is.na(x2),x2,scenario) %>%
recode("Obs" = "obs")) %>%
select(-x2) %>%
# mise en forme longue
pivot_longer(cols=-c("scenario","annee","datepubli"),names_to="serie",values_to="val") %>%
filter(!is.na(val))
unique(tablong$scenario )
tablong <- bind_rows(
tablong %>% filter(serie!="partsalva" | scenario=="obs"),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>% filter(annee<max(annee)) %>% ungroup(),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>%
filter(annee==max(annee)) %>%
slice(rep(1:n(),each=2070-annee+1)) %>%
mutate(annee=c(min(annee):2070)) %>%
ungroup()
) %>%
arrange(datepubli,serie,scenario,annee)
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (tablong %>%
filter(scenario!="obs")  %>%
select(scenario,serie,datepubli) %>%
distinct() %>%
group_by(serie,datepubli) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4) %>%
select(-nbsc))
# duplication des projections en "tous scénarios" pour chacun des scénarios de projection
scenariosproj <- tablong %>% filter(!(scenario %in% c("obs","tous scénarios"))) %>%
select(datepubli,scenario) %>% distinct() %>%
rename(datepublisc=datepubli)
tablong <- bind_rows(
tablong %>% filter(scenario=="obs"),
tablong %>% filter(scenario!="obs") %>%
anti_join(nbseriesscunique, by=c("datepubli","serie")),
tablong %>% filter(scenario!="obs") %>%
inner_join(nbseriesscunique, by=c("datepubli","serie")) %>%
group_by(serie,datepubli,annee) %>%
slice(rep(1:n(),each=4) ) %>%
mutate(scenario = (scenariosproj %>% filter(datepublisc==min(datepubli)))$scenario ) %>%
ungroup()
)
# création de la table complète
#for (i in c(1:length(tabindics))) {
#  if (i==1) {projcor  <- tabindics[[i]]}
#  else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee","datepubli"))}
#  else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario) %>% distinct(),by=c("annee","datepubli"))}
#}
projcor <- tablong %>%
pivot_wider(id_cols=c("datepubli","scenario","annee"),
names_from="serie",values_from="val") %>%
mutate(txprelevconvepr = if_else(
is.na(txprelevconvepr) & (scenario=="obs"),txprelev,txprelevconvepr),
txprelevconveec = if_else(
is.na(txprelevconveec) & (scenario=="obs"),txprelev,txprelevconveec),
partressourcespibconvepr = if_else(
is.na(partressourcespibconvepr) & (scenario=="obs"),partressourcespib,partressourcespibconvepr),
partressourcespibconveec = if_else(
is.na(partressourcespibconveec) & (scenario=="obs"),partressourcespib,partressourcespibconveec) )
View(projcor)
projcor <- tablong %>%
pivot_wider(id_cols=c("datepubli","scenario","annee"),
names_from="serie",values_from="val") %>%
mutate(txprelevconvepr = if_else(
is.na(txprelevconvepr) & (scenario=="obs"),txprelev,txprelevconvepr),
txprelevconveec = if_else(
is.na(txprelevconveec) & (scenario=="obs"),txprelev,txprelevconveec),
partressourcespibconvepr = if_else(
is.na(partressourcespibconvepr) & (scenario=="obs"),partressourcespib,partressourcespibconvepr),
partressourcespibconveec = if_else(
is.na(partressourcespibconveec) & (scenario=="obs"),partressourcespib,partressourcespibconveec) ) %>%
arrange(datepubli,scenario,annee)
View(projcor)
usethis::use_data(projcor, overwrite=TRUE)
document()
build_site()
