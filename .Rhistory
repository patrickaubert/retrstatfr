txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"^[[:alnum:]]","")
)
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"[^[:alnum:]]","")
)
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
View(txt_tab)
View(txt_tab)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
select(-txt_init)
View(tab_)
freq(tab_$nb_space)
library(desscr)
library(descr)
library(desscr)
freq(tab_$nb_space)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
indentation = (indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init")
View(tab_)
View(tab)
View(txt_tab)
View(tab)
View(txt_tab)
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
position = 1
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = 1+(niv_indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
#niv_indentation = 1+(niv_indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type")
freq(tab_$niv_indentation)
View(tab_)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
View(tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct()
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
View(tab)
truc <- txt_tab %>% group_by(txt_init) %>% filter(n()>1)
View(truc)
View(tab_)
devtools::document()
devtools::check()
(10658)/35416
(10658*1.03)/(35416+0.3*10658)
(10658*1.03)/(35416+0.03*10658)
library(tidyverse)
position = 1
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct()
# attention : il reste un risque de création de doublon, si plusieurs lignes ont le même intitulés (par exemple "autres transferts")
tab <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab)
nb_indentations <- sort(unique(tab$niv_indentation))
nb_indentations
tab_ <- tab
tab <- tab %>% rename(niv_indentation_brut=niv_indentation)
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
# --- extraction complémentaire avec pdftools, pour récupérer le niveau d'indentation
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct()
# attention : il reste un risque de création de doublon, si plusieurs lignes ont le même intitulés (par exemple "autres transferts")
tab <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
# --- création d'intitulés indentés
nb_indentations <- sort(unique(tab$niv_indentation))
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in 1:nb_indentations){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
type,
NA_character_
)
}
for (i in 1:nb_indentations){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
for (i in c(1:nb_indentations)){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
c(1:nb_indentations)
c(1:nb_indentations)
nb_indentations
tab <- tab_
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in c(1:NROW(nb_indentations))){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
View(tab)
tab <- tab %>%
select(-niv_indentation_brut) %>%
relocate(c(starts_with("type_")), .after="type") %>%
relocate("niv_indentation", .before = "type") %>%
fill(c(starts_with("type_")), .direction="down")
View(tab)
tab <- tab_
nb_indentations <- sort(unique(tab$niv_indentation))
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in c(1:NROW(nb_indentations))){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
tab <- tab %>%
select(-niv_indentation_brut) %>%
relocate(c(starts_with("type_")), .after="type") %>%
relocate("niv_indentation", .before = "type")
tab <- tab %>%
fill("type_1", .direction="down")
View(tab)
for (i in c(2:NROW(nb_indentations))){
tab <- tab %>%
group_by( paste0("type_",i-1)) %>%
fill( paste0("type_",i) , .direction="down") %>%
ungroup()
}
View(tab)
tab <- tab_
nb_indentations <- sort(unique(tab$niv_indentation))
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in c(1:NROW(nb_indentations))){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
tab <- tab %>%
select(-niv_indentation_brut) %>%
relocate(c(starts_with("type_")), .after="type") %>%
relocate("niv_indentation", .before = "type")
tab <- tab %>%
fill("type_1", .direction="down")
for (i in c(2:NROW(nb_indentations))){
tab <- tab %>%
group_by( !!sym(paste0("type_",i-1)) ) %>%
fill( !!sym(paste0("type_",i)) , .direction="down") %>%
ungroup()
}
View(tab)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
# --- extraction complémentaire avec pdftools, pour récupérer le niveau d'indentation
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct() %>%
# ci-dessous : pour la gestion des doublons de lignes (ayant le même intitulé : par exemple "autres transferts")
# (on utilise le fait que ces intitules identiques apparaissent dans le même ordre dans les deux tables)
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup()
tab <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup() %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab)
nb_indentations <- sort(unique(tab$niv_indentation))
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in c(1:NROW(nb_indentations))){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
tab <- tab %>%
select(-niv_indentation_brut) %>%
relocate(c(starts_with("type_")), .after="type") %>%
relocate("niv_indentation", .before = "type")
tab <- tab %>%
fill("type_1", .direction="down")
for (i in c(2:NROW(nb_indentations))){
tab <- tab %>%
group_by( !!sym(paste0("type_",i-1)) ) %>%
fill( !!sym(paste0("type_",i)) , .direction="down") %>%
ungroup()
}
View(tab)
devtools::document()
document()
devtools::document()
position = 1
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
library(tidyverse)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct() %>%
# ci-dessous : pour la gestion des doublons de lignes (ayant le même intitulé : par exemple "autres transferts")
# (on utilise le fait que ces intitules identiques apparaissent dans le même ordre dans les deux tables)
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup()
View(txt_tab)
tab <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup() %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type")
View(tab)
View(txt_tab)
View(tab)
View(txt_tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct() %>%
# ci-dessous : pour la gestion des doublons de lignes (ayant le même intitulé : par exemple "autres transferts")
# (on utilise le fait que ces intitules identiques apparaissent dans le même ordre dans les deux tables)
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup()
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct()
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
#distinct() %>%
# ci-dessous : pour la gestion des doublons de lignes (ayant le même intitulé : par exemple "autres transferts")
# (on utilise le fait que ces intitules identiques apparaissent dans le même ordre dans les deux tables)
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup()
View(txt_tab)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
# --- extraction complémentaire avec pdftools, pour récupérer le niveau d'indentation
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
#distinct() %>%
# ci-dessous : pour la gestion des doublons de lignes (ayant le même intitulé : par exemple "autres transferts")
# (on utilise le fait que ces intitules identiques apparaissent dans le même ordre dans les deux tables)
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup()
tab <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
group_by(txt_init) %>% mutate(txt_init=paste0(txt_init,"#",1:n())) %>% ungroup() %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
# --- création d'intitulés indentés
nb_indentations <- sort(unique(tab$niv_indentation))
tab <- tab %>% mutate(niv_indentation_brut=niv_indentation)
for (i in c(1:NROW(nb_indentations))){
tab <- tab %>%
mutate(niv_indentation = ifelse(niv_indentation_brut==nb_indentations[i],i,
niv_indentation))
tab[[paste0("type_",i)]] <- if_else(
tab$niv_indentation_brut==nb_indentations[i],
tab$type,
NA_character_
)
}
tab <- tab %>%
select(-niv_indentation_brut) %>%
relocate(c(starts_with("type_")), .after="type") %>%
relocate("niv_indentation", .before = "type")
tab <- tab %>%
fill("type_1", .direction="down")
for (i in c(2:NROW(nb_indentations))){
tab <- tab %>%
group_by( !!sym(paste0("type_",i-1)) ) %>%
fill( !!sym(paste0("type_",i)) , .direction="down") %>%
ungroup()
}
View(tab)
devtools::document()
