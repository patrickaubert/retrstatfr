})
tabindics <- lapply(indiccor[1],
function(x){
tab <- extrait_opendata(x) %>% select(-sexe,-geo) %>% rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
pensmoyrel <- extrait_opendata("pension moyenne relative") %>%
select(-sexe,-geo) %>% rename(pensmoyrel=valeurs, scenario=x1)
partretrpib <- extrait_opendata(intitulecourt="partretrpib") %>% #extrait_opendata("dépenses de retraite en pct du pib") %>%
select(-sexe,-geo) %>% rename(partretrpib=valeurs, scenario=x1)
indiccor
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>% select(-sexe,-geo) %>% rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics)
names(tabindics) <- indiccor
names(tabindics)
truc <- tabindics$partsalva
View(truc)
View(truc)
truc <-tabindics$pensmoynetterel
View(truc)
truc <-tabindics$rationivvie
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
truc <-tabindics$pensmoynetterel
truc <-tabindics$pensmoynetterel
View(truc)
View(truc)
sources_opendata <- read.csv2("data-raw/sources_open_data.csv", encoding="UTF-8")
usethis::use_data(sources_opendata, overwrite=TRUE)
load_all()
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
View(sources_opendaata)
View(sources_opendata)
lenght("")
length("")
length(NA)
length(NULL)
length(NULL)==1L
length(NA)==1L
load_all()
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
load_all()
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
sources_opendata <- read.csv2("data-raw/sources_open_data.csv", encoding="UTF-8")
usethis::use_data(sources_opendata, overwrite=TRUE)
sources_opendata <- read.csv2("data-raw/sources_open_data.csv", encoding="UTF-8")
usethis::use_data(sources_opendata, overwrite=TRUE)
load_all()
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
indiccor
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
truc <-tabindics$partressourcespibconveec
View(truc)
intitulecourt<-"partressourcespibconveec"
intitulecourtloc <- intitulecourt
if (!is.null(intitule)) {
intituleloc <- recode(enc2utf8(intitule),
"taux de retraités" = "taux de retraités par âge",
"txretr" = "taux de retraités par âge",
"taux de nouveaux retraités" = "taux de nouveaux retraités par âge",
"tauxnouvretr" = "taux de nouveaux retraités par âge")
if (!(intituleloc %in% sources_opendata$intitule)) {warning(paste0("Intitulé '",intituleloc,"' non retrouvé"))}
}
if (!is.null(intitulecourt)) { donnees <- sources_opendata %>% filter(intitulecourt==intitulecourtloc)}
(nrow(donnees)>1)
if (!(length(donnees$zone)==1L)) {warning(paste("Problème rencontré pour la série ",donnees$intitulecourt))}
rangecells <- cellranger::as.cell_limits(donnees$zone)
rangecells
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
View(vals)
vals <- vals %>%
mutate(x1=x1 %>% as.factor() %>% as.numeric() ) %>%
fill(x1,.direction="downup")
View(vals)
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
vals <- vals %>%
mutate(x1=x1 %>% as.factor(order=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
vals <- vals %>%
mutate(x1=x1 %>% as.factor(levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
?as.factor
unique(vals$x1)
truc <- vals %>%
mutate(x1=as.factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
vals <- read.xlsx(
xlsxFile = donnees$url,
sheet = donnees$onglet,
rows = c(rangecells$ul[1]:rangecells$lr[1]),
cols = c(rangecells$ul[2]:rangecells$lr[2]),
colNames = TRUE, rowNames = FALSE
) %>%
janitor::clean_names()
truc <- vals %>%
mutate(x1=as.factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
View(vals)
truc <- vals %>%
mutate(x1=factor(x1,levels=unique(vals$x1)) %>% as.numeric() ) %>%
fill(x1,.direction="downup")
View(truc)
names(vals)
cols_error <- names(vales)[!grepl("^x[[:digit:]]+$",names(vals))]
cols_error <- names(vals)[!grepl("^x[[:digit:]]+$",names(vals))]
cols_error
cols_an <- names(vals)[grepl("^x[[:digit:]]{4}$",names(vals))]
cols_error <- names(vals)[!grepl("^x[[:digit:]]+$",names(vals))]
vals <- vals %>%
select(-all_of(cols_error)) %>%
pivot_longer(cols=cols_an,names_to="annee",values_to="valeurs") %>%
mutate(annee = annee %>% str_replace("[^[:digit:]]","") %>% as.numeric() )
View(vals)
load_all()
# extraction de tous les noms des séries de données tirées du rapport du COR
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1)
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
truc <- do.call("bind_rows",tabindics)
View(truc)
unique(truc$scenario)
View(truc)
usethis::use_data(txretr, overwrite=TRUE)
# ===================================================================================
# données des projections du COR
# extraction de tous les noms des séries de données tirées du rapport du COR
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999E-2"="+1,8%/an",
"1.4999999999999999E-2"="+1,5%/an",
"1.2999999999999999E-2"=="+1,3%/an",
"0.01"=="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999E-2"="+1,8%/an",
"1.4999999999999999E-2"="+1,5%/an",
"1.2999999999999999E-2"="+1,3%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
View(truc)
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999E-2"="+1,8%/an",
"1.4999999999999999E-2"="+1,5%/an",
"1.2999999999999999E-2"="+1,3%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
for (i in c(1:NROW(indiccor))) {
projcor <- case_when(
i == 1 ~ tabindics[[i]],
i>1 & indiccor[i]!="ageconjretr" ~ projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))
)
}
projcor <- projcor %>%
left_join(tabindics[["ageconjretr"]] %>% select(-scenario),by="annee")
for (i in c(1:1)) {#c(1:NROW(indiccor))) {
projcor <- case_when(
i == 1 ~ tabindics[[i]],
i>1 & indiccor[i]!="ageconjretr" ~ projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))
)
}
projcor <-  tabindics[[i]]
View(projcor)
View(projcor)
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  ~ tabindics[[i]]}
else if (i>1 & indiccor[i]!="ageconjretr") {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
}
projcor <- projcor %>%
left_join(tabindics[["ageconjretr"]] %>% select(-scenario),by="annee")
View(projcor)
View(projcor)
unique(projcor$scenario)
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
nbseriesscunique <- do.call("bind_rows",tabindics)
View(nbseriesscunique)
nbseriesscunique <- do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4)
nbseriesscunique <- do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
select(scenario,serie) %>%
distinct()
View(nbseriesscunique)
nbseriesscunique <- do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup()
View(nbseriesscunique)
nbseriesscunique <- do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
filter(!is.na(val)) %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup()
View(nbseriesscunique)
nbseriesscunique <- (do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
filter(!is.na(val)) %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4))$serie
nbseriesscunique <- (do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
filter(!is.na(val)) %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4))$serie
nbseriesscunique
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  ~ tabindics[[i]]}
else if (i>1 & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
else if (i>1 & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]]%>% select(-scenario),by=c("annee"))}
}
View(projcor)
nbseriesscunique
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  ~ tabindics[[i]]}
else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario),by=c("annee"))}
}
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  ~ tabindics[[i]]}
else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
#else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario),by=c("annee"))}
}
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  ~ tabindics[[i]]}
#else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
#else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario),by=c("annee"))}
}
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
filter(!is.na(val)) %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4))$serie
nbseriesscunique
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  <- tabindics[[i]]}
else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario),by=c("annee"))}
}
View(projcor)
truc <- tabindics[["partsalva"]]
View(truc)
sources_opendata <- read.csv2("data-raw/sources_open_data.csv", encoding="UTF-8")
usethis::use_data(sources_opendata, overwrite=TRUE)
# extraction de tous les noms des séries de données tirées du rapport du COR
indiccor <- (sources_opendata %>% filter(producteur=="COR",reference=="rapport annuel"))$intitulecourt
# extraction de toutes les séries
tabindics <- lapply(indiccor,
function(x){
tab <- extrait_opendata(intitulecourt=x) %>%
select(-sexe,-geo) %>%
filter(!is.na(valeurs)) %>%
rename(scenario=x1) %>%
mutate(scenario = recode(
scenario %>% tolower() %>% trimws(),
"observé" = "obs",
"observée" = "obs",
"1.7999999999999999e-2"="+1,8%/an",
"1.4999999999999999e-2"="+1,5%/an",
"1.2999999999999999e-2"="+1,3%/an",
"0.01"="+1%/an"
))
names(tab) <- recode(names(tab),"valeurs"=x)
return(tab)
})
names(tabindics) <- indiccor
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (do.call("bind_rows",tabindics) %>%
pivot_longer(cols=-c("scenario","annee"),names_to="serie",values_to="val") %>%
filter(!is.na(val)) %>%
select(scenario,serie) %>%
distinct() %>%
group_by(serie) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4))$serie
nbseriesscunique
truc <- tabindics[["partsalva"]]
View(truc)
View(truc)
derpartsalva <- tabindics[["partsalva"]] %>% filter(annee==max(annee))
View(derpartsalva)
projparsalva <- rep(derpartsalva,2070-derpartsalva$annee-1) %>% mutate(annee=c((derpartsalva$annee+1):2070))
projparsalva <- duplicate(2070-derpartsalva$annee-1,derpartsalva,simplify=FALSE) %>% mutate(annee=c((derpartsalva$annee+1):2070))
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee-1,derpartsalva,simplify=FALSE)) %>%
mutate(annee=c((derpartsalva$annee+1):2070))
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee-1,derpartsalva,simplify=FALSE)) %>%
mutate(annee=c((derpartsalva$annee+1):2070))
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee-1,derpartsalva,simplify=FALSE))
View(projparsalva)
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee-1,derpartsalva,simplify=FALSE)) %>%
mutate(annee=derpartsalva$annee+c(1:n()))
View(projparsalva)
derpartsalva <- tabindics[["partsalva"]] %>% filter(annee==max(annee))
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee,derpartsalva,simplify=FALSE)) %>%
mutate(annee=derpartsalva$annee+c(1:n()))
View(projparsalva)
derpartsalva <- tabindics[["partsalva"]] %>% filter(annee==max(annee))
projparsalva <- do.call("bind_rows",
replicate(2070-derpartsalva$annee,derpartsalva,simplify=FALSE)) %>%
mutate(annee=derpartsalva$annee+c(1:n()))
tabindics[["partsalva"]] <- bind_rows(tabindics[["partsalva"]] ,projparsalva)
for (i in c(1:NROW(indiccor))) {
if (i==1) {projcor  <- tabindics[[i]]}
else if ((i>1) & !(indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]],by=c("scenario","annee"))}
else if ((i>1) & (indiccor[i] %in% c(nbseriesscunique))) {projcor <- projcor %>% left_join(tabindics[[i]] %>% select(-scenario) %>% distinct(),by=c("annee"))}
}
View(projcor)
usethis::use_data(projcor, overwrite=TRUE)
document()
load_all()
build()
library(pkgdown)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
load_all()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
pkgdown::build_site()
install()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
build()
document()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
document()
library(devtools)
load_all()
library(devtools)
load_all()
View(txretr)
library(tidyverse)
txretr <- extrait_opendata("txretr")
txretr <- txretr %>% rename(txretr=valeurs) %>% mutate(txretr = txretr/100)
txnvretr <- extrait_opendata("taux de nouveaux retraités par âge")
txnvretr <- txnvretr %>% rename(txnouvretr=valeurs,age=x1) %>% mutate(txnouvretr = txnouvretr/100)
txretr <- full_join(txretr,txnvretr, by=c("age","annee","sexe","geo"))
load_all()
?retrstatfr
unload()
load_all()
