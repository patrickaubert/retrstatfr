filter(!is.na(val)) %>%
# nouvelle correction à la main
filter(!(grepl("^2015",datepubli) & grepl("convention cor",scenario))) %>%
filter(!(grepl("^2016",datepubli) & grepl("conv\\. cor",scenario))) %>%
mutate(scenario = case_when(
grepl("^2015",datepubli) ~ str_replace(scenario,"[[:space:]]*\\(convention.+$",""),
grepl("^2016",datepubli) ~ str_replace(scenario,"[[:space:]]*\\(conv.+$",""),
TRUE ~ scenario   ) %>%
str_replace("^(scénario|variante|gains de productivité annuels tendanciels de) ","") %>%
str_replace_all("(?<=[[:digit:]])[[:space:]](?=%)","") %>%
recode(!!! list_noms_sc))
unique(tablong$scenario )
# part des salaires dans la VA : on duplique jusqu'à l'horizon de projection la dernière valeur indiquée (supposée constante en projection)
if ("partsalva" %in% names(tablong)){
tablong <- bind_rows(
tablong %>% filter(serie!="partsalva" | scenario=="obs"),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>% filter(annee<max(annee)) %>% ungroup(),
tablong %>% filter(serie=="partsalva" & scenario!="obs") %>%
group_by(datepubli) %>%
filter(annee==max(annee)) %>%
slice(rep(1:n(),each=2070-annee+1)) %>%
mutate(annee=c(min(annee):2070)) %>%
ungroup()
) %>%
arrange(datepubli,serie,scenario,annee)
}
# identification des séries pour lesquelles les valeurs en projection sont identiques dans tous les scénarios
nbseriesscunique <- (tablong %>%
filter(scenario!="obs")  %>%
select(scenario,serie,datepubli) %>%
distinct() %>%
group_by(serie,datepubli) %>% summarize(nbsc=n()) %>% ungroup() %>%
filter(nbsc<4) %>%
select(-nbsc))
# duplication des projections en "tous scénarios" pour chacun des scénarios de projection
scenariosproj <- tablong %>% filter(!(scenario %in% c("obs","tous scénarios"))) %>%
select(datepubli,scenario) %>% distinct() %>%
rename(datepublisc=datepubli)
tablong <- bind_rows(
tablong %>% filter(scenario=="obs"),
tablong %>% filter(scenario!="obs") %>%
anti_join(nbseriesscunique, by=c("datepubli","serie")),
tablong %>% filter(scenario!="obs") %>%
inner_join(nbseriesscunique, by=c("datepubli","serie")) %>%
group_by(serie,datepubli,annee) %>%
slice(rep(1:n(),each=NROW((scenariosproj %>% filter(datepublisc==datepubli[1]))$scenario)) ) %>%
mutate(scenario = (scenariosproj %>% filter(datepublisc==datepubli[1]))$scenario ) %>%
ungroup()
)
projcor <- tablong %>%
pivot_wider(id_cols=c("datepubli","scenario","annee"),
names_from="serie",values_from="val")
if ("txprelevconveec" %in% names(projcor)){
projcor <- projcor %>%
mutate(txprelevconveec = if_else(
is.na(txprelevconveec) & (scenario=="obs"),txprelevconvtcc,txprelevconveec))
}
if ("partressourcespibconvtcc" %in% names(projcor)){
projcor <- projcor %>%
mutate(partressourcespibconvtcc = case_when(
!is.na(partressourcespibconvtcc) ~ partressourcespibconvtcc,
is.na(partressourcespibconvtcc) & (scenario=="obs") & !is.na(partressourcespibconveec) ~ partressourcespibconveec,
TRUE ~ partressourcespibconvtcc)
)
}
if ("partressourcespibconvepr" %in% names(projcor)){
projcor <- projcor %>%
mutate(partressourcespibconvepr = case_when(
!is.na(partressourcespibconvepr) ~ partressourcespibconvepr,
is.na(partressourcespibconvepr) & (scenario=="obs") & !is.na(partressourcespibconvtcc) ~ partressourcespibconvtcc,
is.na(partressourcespibconvepr) & (scenario=="obs") & !is.na(partressourcespibconveec) ~ partressourcespibconveec,
is.na(partressourcespibconvepr) & (scenario!="obs") ~ partretrpib + soldeconvepr,
TRUE ~ partressourcespibconvepr),
soldeconvepr = case_when(
!is.na(soldeconvepr) ~ soldeconvepr,
is.na(soldeconvepr) ~ partressourcespibconvepr-partretrpib)
)
}
if ("txprelevconvepr" %in% names(projcor)){
projcor <- projcor %>%
mutate(txprelevconvepr = case_when(
!is.na(txprelevconvepr) ~ txprelevconvepr,
is.na(txprelevconvepr) & (scenario=="obs") & !is.na(txprelevconvtcc) ~ txprelevconvtcc,
is.na(txprelevconvepr) & (scenario!="obs") & !is.na(txprelevconvtcc) ~ partressourcespibconvepr * (txprelevconvtcc/partressourcespibconvtcc),
TRUE ~ txprelevconveec))
}
if ("partressourcespibconveec" %in% names(projcor)){
projcor <- projcor %>%
mutate(partressourcespibconveec = case_when(
!is.na(partressourcespibconveec) ~ partressourcespibconveec,
is.na(partressourcespibconveec) & (scenario=="obs") ~ partressourcespibconvtcc,
#is.na(partressourcespibconveec) & (scenario!="obs") ~ partretrpib + soldeconveec,
TRUE ~ partressourcespibconveec)#,
#soldeconveec = case_when(
#  !is.na(soldeconveec) ~ soldeconveec,
#  is.na(soldeconveec) ~ partressourcespibconveec-partretrpib
#)
)
}
if ("revactmoynet" %in% names(projcor)){
projcor <- projcor %>%
mutate(revactmoynet = case_when(
!is.na(revactmoynet) ~ revactmoynet,
!is.na(pensmoynette) & !is.na(pensmoynetterel) & pensmoynetterel>0 ~ (pensmoynette/pensmoynetterel),
TRUE ~ revactmoynet)
)
}
projcor <- projcor %>%
arrange(datepubli,scenario,annee) %>%
filter(annee>=2002)
verif <- projcor %>% filter(annee==2025 & grepl("an$",scenario) ) %>% #prise comme année de référence qui devrait être présente dans toutes les projections
select(-scenario,-annee) %>%
pivot_longer(cols=-c("datepubli"),names_to="indicateur",values_to="val") %>%
filter(is.na(val)) %>% distinct(datepubli,indicateur) %>%
mutate(absent="XXX") %>% pivot_wider(names_from="indicateur",values_from="absent")
View(verif)
usethis::use_data(projcor, overwrite=TRUE)
document()
600/101.50
2600-6*101.5
1000/5.12
195*5.12
2615-6*101.5-195*5.12
500/5.13
2615-6*101.5-195*5.12-97*5.13
500/5.16
97*5.16
2600*11*0.04*0.7
2600*11/12*0.04*0.7
6200*0.04*0.7
6200*0.04*0.7/12
library(tabulizer)
install.packages("tabulizer")
remotes::install_github("ropensci/tabulizer")
pds_ccss <- "https://contrib.securite-sociale.fr/files/live/sites/SSFR/files/medias/CCSS/2023/CCSS-Sept2023.pdf"
library(rJava)
Sys.setenv(JAVA_HOME = "C:/Program Files/Java/jre1.8.0_431")
install.packages("rJava")
install.packages("rJava")
pdf_essai <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page_essai <- 167
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
position = 1
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
txt_tab <- pdftools:: pdf_text(pdf_ccss)[page] %>%
strsplit("\n")[[1]]
txt_tab <- pdftools:: pdf_text(pdf_ccss)[page]
page
pdf_ccss
txt_tab <- pdftools::pdf_text(pdf_ccss)[page]
txt_tab <- pdftools::pdf_text(pdf_ccss)
View(tab)
tab <- tab %>% select(type, starts_with("2"))
tab <- tab |> select(type, starts_with("2"))
tab <- tab |> select(type, starts_with("2"))
tab <- tab %>% select(type, starts_with("2"))
tab <- tab magrittr::`%>%` select(type, starts_with("2"))
library(dplyr)
tab <- tab %>% select(type, starts_with("2"))
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
View(tab)
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
library stringr
library( stringr)
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
txt_tab <- pdftools::pdf_text(pdf_ccss)[page]
install.packages("pdftools")
install.packages("pdftools")
library(pdftools)
txt_tab <- pdftools::pdf_text(pdf_ccss)[page]
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page
)
txt_tab
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )  %>%
strsplit("\n")[[1]]
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )  %>%
strsplit("\n")
View(txt_tab)
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )
txt_tab <- data.frame(
txt_init = strsplit(txt_tab,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
View(txt_tab)
?extract_text
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )
txt_tab
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )
txt_tab <- txt_tab %>% str_replace_all("\\\r","#")
txt_tab <- data.frame(
txt_init = strsplit(txt_tab,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
for (i in 1:pdf_info(pdf_ccss)$page) {
cat(paste0("Processing page ", i, "\n"))
text <- pdf_text("2022-09-CCSS.pdf")[i]
print(text)
}
pdf_ccss
for (i in 1:pdf_info(pdf_ccss)$page) {
cat(paste0("Processing page ", i, "\n"))
text <- pdf_text(page)[i]
print(text)
}
for (i in 1:pdf_info(pdf_ccss)$page) {
cat(paste0("Processing page ", i, "\n"))
text <- pdf_text(pdf_ccss)[i]
print(text)
}
text <- pdf_text(pdf_ccss)[167]
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
position = 1
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
library(dplyr)
libary(stringr)
library(stringr)
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
Sys.setenv(PDF_FONTS = "")
text <- pdftools::pdf_text(pdf_ccss)[167]
packageVersion("pdftools")
pdffonts "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
tableau_brut <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page,
method = "stream"
)[[position]]
View(tableau_brut)
View(tableau_brut)
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )
txt_tab <- txt_tab %>% str_replace_all("\\\r","#")
txt_tab <- data.frame(
txt_init = strsplit(txt_tab,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
txt_tab <- tabulapdf::extract_text(
file = pdf_ccss,
pages = page   )
txt_tab
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page,
guess = FALSE,
methode="stream"
)[[position]]
View(tab)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page,
methode="lattice"
)[[position]]
View(tab)
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
page <- 199
position <- 2
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
View(tab)
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[199]
View(tab)
View(tab)
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/CCSS-octobre 2024.pdf"
page <- 186
position <- 2
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[186]
text <- pdftools::pdf_text(pdf_ccss)
text <- pdf_text(pdf_ccss)
library(pdftools)
text <- pdf_text(pdf_ccss)[i]
text <- pdf_text(pdf_ccss)
text <- pdftools::pdf_text(pdf_ccss)[186]
text
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
text <- pdftools::pdf_text(pdf_ccss)[186]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[186]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
text <-""
text <- pdftools::pdf_text(pdf_ccss)[186]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   )
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"^[[:alnum:]]","")
)
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"[^[:alnum:]]","")
)
View(txt_tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
nb_space = nchar(str_extract(txt_init,"^[[:space:]]+")),
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
View(txt_tab)
View(txt_tab)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
select(-txt_init)
View(tab_)
freq(tab_$nb_space)
library(desscr)
library(descr)
library(desscr)
freq(tab_$nb_space)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
indentation = (indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init")
View(tab_)
View(tab)
View(txt_tab)
View(tab)
View(txt_tab)
pdf_ccss <- "C:/Users/PA/Documents/bases_de_donnees/rapports_CCSS/rapports/2022-09-CCSS.pdf"
page <- 167
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
position = 1
tab <- tabulapdf::extract_tables(
file = pdf_ccss,
pages = page
)[[position]]
names(tab)[1] <- "type"
tab <- tab %>% select(type, starts_with("2"))
tab <- tab %>%
mutate_at(vars(starts_with("2")), ~as.numeric(str_replace_all(.,"[[:space:]]","")))
View(tab)
text <- pdftools::pdf_text(pdf_ccss)[167]
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = 1+(niv_indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
#niv_indentation = 1+(niv_indentation-3)/2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type")
freq(tab_$niv_indentation)
View(tab_)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
)
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
View(tab)
txt_tab <- data.frame(
txt_init = strsplit(text,"\n")[[1]],
stringsAsFactors = FALSE   ) %>%
mutate(
niv_indentation = nchar(str_extract(txt_init,"^[[:space:]]+")),
niv_indentation = niv_indentation-2,
txt_init = str_replace_all(tolower(txt_init),"[^[:alpha:]]","")
) %>%
distinct()
tab_ <- tab %>%
mutate(txt_init = str_replace_all(tolower(type),"[^[:alpha:]]","") ) %>%
left_join(txt_tab, by="txt_init") %>%
relocate("niv_indentation",.before="type") %>%
select(-txt_init)
View(tab_)
View(tab)
truc <- txt_tab %>% group_by(txt_init) %>% filter(n()>1)
View(truc)
View(tab_)
devtools::document()
devtools::check()
(10658)/35416
(10658*1.03)/(35416+0.3*10658)
(10658*1.03)/(35416+0.03*10658)
